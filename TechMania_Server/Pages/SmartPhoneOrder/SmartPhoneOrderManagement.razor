@page "/smartphone-order/details/{Id:int}"
@using Models
@using Business.Repository.IRepository
@using Common
@inject ISmartPhoneOrderDetailRepository smartPhoneDetailsRepository
@inject IJSRuntime jsRuntime
@inject Microsoft.Extensions.Configuration.IConfiguration config

<div class="mt-4 px-md-1 mx-md-1">
    @if (IsLoading)
    {
        <div class="spinner"></div>
    }
    else
    {
        <div class="row p-2 my-3 bg-dark" style="border-radius:20px; ">
            <div class="col-6 pt-2 pl-4 text-info">
                <h2>Order Details : </h2>
            </div>
            <div class="col-6 pt-2 col-md-3 offset-md-3">
                <a href="/smartphone-order" class="btn btn-info form-control">Back to Orders</a>
            </div>
            <div class="col-12 col-lg-8 p-4">
                <div class="row px-2 text-success border-bottom">
                    <div class="col-8 py-1"><p style="font-size:x-large;margin:0px;">Selected SmartPhone</p></div>

                </div>

                <div class="row">
                    <div class="col-7">
                        <div id="" class="carousel slide mb-4 m-md-3 m-0 pt-3 pt-md-0" data-ride="carousel">
                            <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                                <ol class="carousel-indicators">
                                    @{ int imageIndex = 0;
                                        int innerImageIndex = 0; }
                                    @foreach (var image in SmartPhoneOrdering.SmartPhoneDTO.SmartPhoneImages)
                                    {
                                        if (imageIndex == 0)
                                        {
                                            <li data-target="#carouselExampleIndicators" data-slide-to="@imageIndex" class="active"></li>
 }
                                        else
                                        {
                                            <li data-target="#carouselExampleIndicators" data-slide-to="@imageIndex"></li>
}
                                        imageIndex++;
                                    }
                                </ol>
                                <div class="carousel-inner">
                                    @foreach (var image in SmartPhoneOrdering.SmartPhoneDTO.SmartPhoneImages)
                                    {
                                        var domain = config["ServerUrl"];
                                        var imageUrl = domain + image.PhoneImageUrl;

                                        if (innerImageIndex == 0)
                                        {
                                            <div class="carousel-item active">
                                                <img class="d-block w-100" style="border-radius:20px;" src="@imageUrl" alt="First slide">
                                            </div> }
                                        else
                                        {
                                            <div class="carousel-item">
                                                <img class="d-block w-100" style="border-radius:20px;" src="@imageUrl" alt="First slide">
                                            </div>}

                                        innerImageIndex++;
                                    }
                                </div>
                                <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="col-5">
                        <span class="float-right pt-4 text-white-50">
                            <span class="float-right">SmartPhone manufacturer: @SmartPhoneOrdering.SmartPhoneDTO.Manufacturer  </span><br />
                            <span class="float-right pt-1">SmartPhone details : @SmartPhoneOrdering.SmartPhoneDTO.Details</span><br />
                            <h4 class="text-warning font-weight-bold pt-5 float-right">
                                USD
                                <span style="border-bottom:1px solid #ff6a00">
                                    @SmartPhoneOrdering.TotalCost.ToString("#,#.00#;(#,#.00#)")
                                </span>
                            </h4>

                        </span>
                    </div>
                </div>
                <div class="row p-2">
                    <div class="col-12">
                        <p class="card-title text-warning" style="font-size:xx-large">@SmartPhoneOrdering.SmartPhoneDTO.Name</p>
                        <p class="card-text" style="font-size:large">
                            @((MarkupString)@SmartPhoneOrdering.SmartPhoneDTO.Details)
                        </p>
                    </div>

                </div>
                <div class="row p-2">
                    @if (SmartPhoneOrdering.Status == SD.Status_Ordered || SmartPhoneOrdering.Status == SD.Status_Pending)
                    {
                        <div class="col-3">
                            <button @onclick="CancelOrder" class="btn btn-danger form-control">Cancel Order</button>
                        </div>
                    }

                </div>
            </div>

            <div class="col-12 col-lg-4 p-4 2 mt-4 mt-md-0">
                <div class="row px-2 text-success border-bottom"><div class="col-7 py-1"><p style="font-size:x-large;margin:0px;">Enter Details</p></div></div>
                <div class="form-group pt-2">
                    <label class="text-warning">Order Status</label>
                    <input @bind-value="SmartPhoneOrdering.Status" type="text" disabled class="form-control" />
                </div>
                <div class="form-group pt-2">
                    <label class="text-warning">Name</label>
                    <input @bind-value="SmartPhoneOrdering.Name" type="text" disabled class="form-control" />
                </div>
                <div class="form-group pt-2">
                    <label class="text-warning">Phone</label>
                    <input @bind-value="SmartPhoneOrdering.Phone" type="text" disabled class="form-control" />
                </div>
                <div class="form-group">
                    <label class="text-warning">Email</label>
                    <input @bind-value="SmartPhoneOrdering.Email" type="email" disabled class="form-control" />
                </div>

                @if (SmartPhoneOrdering.Status == SD.Status_OrderConfirmed)
                {
                    <div class="form-group">
                        <label class="text-warning">Order date</label>
                        <input type="text" disabled value="@SmartPhoneOrdering.CheckInDate.ToShortDateString()" class="form-control" />
                    </div>
                }

                <div class="form-group">

                    @if (SmartPhoneOrdering.Status == SD.Status_Pending)
                    {
                        <button @onclick="ConfirmOrder" class="btn btn-success">Confirm Order</button>
                    }

                    @if (SmartPhoneOrdering.Status == SD.Status_Ordered)
                    {
                        <button @onclick="ConfirmOrderSent" class="btn btn-success">Ship order</button>
                    }

                    @if (SmartPhoneOrdering.Status == SD.Status_Order_Completed)
                    {
                        <button disabled class="btn btn-primary">Order is completed</button>
                    }

                    @if (SmartPhoneOrdering.Status == SD.Status_NoShow || SmartPhoneOrdering.Status == SD.Status_Cancelled)
                    {
                        <button disabled class="btn btn-primary">Order is canceled</button>
                    }
                </div>
            </div>


        </div>

    }



</div>


@code {
    [Parameter]
    public int Id { get; set; }

    private SmartPhoneOrderDetailDTO SmartPhoneOrdering { get; set; } = new SmartPhoneOrderDetailDTO() { SmartPhoneDTO = new SmartPhoneDTO() };
    private bool IsLoading { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;
        if (Id != 0)
        {
            SmartPhoneOrdering = await smartPhoneDetailsRepository.GetSmartphoneOrderDetail(Id);
        }
        else
        {
            //error
        }
        IsLoading = false;

    }

    private async Task ConfirmOrder()
    {
        await smartPhoneDetailsRepository.UpdateOrderStatus(SmartPhoneOrdering.Id, SD.Status_Ordered);
        SmartPhoneOrdering = await smartPhoneDetailsRepository.GetSmartphoneOrderDetail(Id);
        await jsRuntime.ToastrSuccess("Order is succesfully ordered");
    }

    private async Task ConfirmOrderSent()
    {
        await smartPhoneDetailsRepository.UpdateOrderStatus(SmartPhoneOrdering.Id, SD.Status_Order_Completed);
        SmartPhoneOrdering = await smartPhoneDetailsRepository.GetSmartphoneOrderDetail(Id);
        await jsRuntime.ToastrSuccess("Order is succesfully sent");
    }

    private async Task CancelOrder()
    {
        await smartPhoneDetailsRepository.UpdateOrderStatus(SmartPhoneOrdering.Id, SD.Status_Cancelled);
        SmartPhoneOrdering = await smartPhoneDetailsRepository.GetSmartphoneOrderDetail(Id);
        await jsRuntime.ToastrSuccess("Order has been canceled");
    }


}
