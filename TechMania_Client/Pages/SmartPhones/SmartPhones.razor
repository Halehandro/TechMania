@page "/smartphones/smartphone"
@inject ILocalStorageService localStorage
@inject IJSRuntime jsRuntime
@inject ISmartPhoneService smartphoneService
@inject Microsoft.Extensions.Configuration.IConfiguration config
<section id="hero">

    <div class="container">
        <div class="row justify-content-between">
            <div class="col-lg-7 pt-5 pt-lg-0 order-2 order-lg-1 d-flex align-items-center">
                <div data-aos="zoom-out">
                    <h1>Search results (@Phones.Count)</h1>
                </div>
            </div>
        </div>
    </div>

    <svg class="hero-waves" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28 " preserveAspectRatio="none">
        <defs>
            <path id="wave-path" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z" />
        </defs>
        <g class="wave1">
            <use xlink:href="#wave-path" x="50" y="3" fill="rgba(255,255,255, .1)" />
        </g>
        <g class="wave2">
            <use xlink:href="#wave-path" x="50" y="0" fill="rgba(255,255,255, .2)" />
        </g>
        <g class="wave3">
            <use xlink:href="#wave-path" x="50" y="9" fill="#fff" />
        </g>
    </svg>

</section>
@if (Phones != null && Phones.Any())
{

    <section class="inner-page">
        <div class="container">
            <EditForm Model="HomeModel" OnValidSubmit="SavePhoneOrderInfo">
                <div class="row px-3 mx-3">
                    <div class="col-6 col-md-4">
                        <div class="form-group">
                            <label class="text-warning">Manufacturer</label>
                            <InputText @bind-Value="HomeModel.Manufacturer" type="text" class="form-control" />
                        </div>
                    </div>
                    <div class=" col-4 col-md-2">
                        <div class="form-group">
                            <label class="text-warning">No. of Phones</label>
                            <select class="form-control" @bind="HomeModel.NoOfPhones">
                                <option value="Select" selected disabled="disabled">(Select No. Of Phones)</option>
                                @for (var i = 1; i <= 5; i++)
                                {
                                    <option value="@i">@i</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-8 col-md-2">
                        <div class="form-group" style="margin-top: 1.9rem !important;">
                            @if (IsProcessing)
                            {
                                <button class="btn btn-success btn-block form-control"><i class="fa fa-spin fa-spinner"></i>Processing...</button>

                            }
                            else
                            {
                                <input type="submit" value="Update" class="btn btn-success btn-block form-control" />

                            }

                        </div>
                    </div>
                </div>
            </EditForm>

        </div>
    </section>

    <div class="mt-4 mx-4 px-0 px-md-5 mx-md-5">


        @*<div class="row p-2 my-3 " style="border-radius:20px; border: 1px solid #ffffff">
                <div class="col-12 col-lg-3 col-md-4">
                    <div id="carouselExampleIndicators" class="carousel slide mb-4 m-md-3 m-0 pt-3 pt-md-0" data-ride="carousel">
                        <ol class="carousel-indicators">
                            <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                            <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
                        </ol>
                        <div class="carousel-inner">
                            <div class="carousel-item active">
                                <img class="d-block w-100" src="images/slide1.jpg" alt="First slide">
                            </div>
                            <div class="carousel-item">
                                <img class="d-block w-100" src="images/slide2.jpg" alt="Second slide">
                            </div>
                        </div>
                        <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="sr-only">Previous</span>
                        </a>
                        <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="sr-only">Next</span>
                        </a>
                    </div>
                </div>
                <div class="col-12 col-lg-9 col-md-8">
                    <div class="row pt-3">
                        <div class="col-12 col-lg-8">
                            <p class="card-title text-warning" style="font-size:xx-large">@phone.Name</p>
                            <p class="card-text">
                                @if (phone.Details.Length > 200)
                                {
                                    @phone.Details.Substring(0, 200);
                                }
                                else
                                {
                                    @phone.Details
                                }
                            </p>
                        </div>
                        <div class="col-12 col-lg-4">
                            <div class="row pb-3 pt-2">
                                <div class="col-12 col-lg-11 offset-lg-1">

                                    <a href="@($"smartphones/phone-details/{phone.Id}")" class="btn btn-success btn-block">Order</a>

                                </div>
                            </div>
                            <div class="row ">
                                <div class="col-12 pb-5">
                                    <span class="float-right">
                                        <h4 class="text-warning font-weight-bold pt-4">$<span style="border-bottom:1px solid #ff6a00">@phone.Price</span></h4>
                                    </span>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>*@

        <section id="counts" class="counts">
            <div class="container">
                <div class="row">
                    @foreach (var phone in Phones)
                    {
                        <div class="col-md-3" style="margin-top:30px">
                            <div class="card" style="width: 18rem;">

                                @if (phone.SmartPhoneImages.Count > 0)
                                {
                                <div id="carouselExampleIndicators" class="carousel slide mb-4 m-md-3 m-0 pt-3 pt-md-0" data-ride="carousel">
                                    <ol class="carousel-indicators">
                                        @{ int imageIndex = 0;
                                            int innerImageIndex = 0; }
                                        @foreach (var image in phone.SmartPhoneImages)
                                        {
                                            if (imageIndex == 0)
                                            {
                                                <li data-target="#carouselExampleIndicators" data-slide-to="@imageIndex" class="active"></li>
                                            }
                                            else
                                            {
                                                <li data-target="#carouselExampleIndicators" data-slide-to="@imageIndex"></li>
                                            }
                                            imageIndex++;
                                        }
                                    </ol>
                                    <div class="carousel-inner">
                                        @foreach (var image in phone.SmartPhoneImages)
                                        {
                                            var domain = config["ServerUrl"];
                                            var imageUrl = domain + image.PhoneImageUrl;

                                            if (innerImageIndex == 0)
                                            {
                                                <div class="carousel-item active">
                                                    <img  height="160" width="280" class="card-img-top" src="@imageUrl" alt="First slide">
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="carousel-item">
                                                    <img height="160" width="280" class="card-img-top" src="@imageUrl" alt="First slide">
                                                </div>
                                            }

                                            innerImageIndex++;
                                        }
                                    </div>
                                    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                        <span class="sr-only">Previous</span>
                                    </a>
                                    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                        <span class="sr-only">Next</span>
                                    </a>
                                </div>
                                }
                                <div class="card-body">
                                    <h5 class="card-title">@phone.Name</h5>
                                    @if (phone.Details.Length > 150)
                                    {
                                        <p class="card-text">@phone.Details.Substring(0, 150)...</p>
                                    }
                                    else
                                    {
                                        <p class="card-text">@phone.Details</p>
                                    }
                                    <a href="/smartphones/phone-details/@phone.Id" class="btn btn-primary">Order</a>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>

        </section>

    </div>
}
else
{
    <div style="position:fixed;top:50%;left:50%;margin-top-50px; margin-left:-100px;">
        <img src="images/ajax-loader.gif" alt="Loading...." />
    </div>
}
@code {
    private HomeVM HomeModel { get; set; } = new HomeVM();
    private List<SmartPhoneDTO> Phones { get; set; } = new List<SmartPhoneDTO>();
    private bool IsProcessing = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (await localStorage.GetItemAsync<HomeVM>(SD.Local_InitialBooking) != null)
            {
                HomeModel = await localStorage.GetItemAsync<HomeVM>(SD.Local_InitialBooking);
            }
            else
            {
                HomeModel.NoOfPhones = 1;
            }
            await LoadPhones();
        }
        catch (Exception e)
        {

            await jsRuntime.ToastrError(e.Message);
        }
    }

    private async Task LoadPhones()
    {
        Phones = await smartphoneService.GetSmartPhones(HomeModel.Manufacturer);
    }

    private async Task SavePhoneOrderInfo()
    {
        //Updateanu vrijednost saljes ponovno
        IsProcessing = true;
        await localStorage.SetItemAsync(SD.Local_InitialBooking, HomeModel);
        await LoadPhones();
        IsProcessing = false;
    }
}
