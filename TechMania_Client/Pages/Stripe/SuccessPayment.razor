@page "/success-payment"
@inject ILocalStorageService localStorage
@inject ISmartPhoneOrderDetailService smartphoneOrderDetailService
@inject ISmartPhoneService smartphoneService
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = SD.Role_Customer)]

<div class="container">
    @if (!IsPaymentComplete)
    {
<div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
    <img src="images/ajax-loader.gif" />
</div> }
else
{
<div class="row mt-4 pt-4">
    <div class="col-10 offset-1 text-center">
        <h2 class="text-warning">Order success!</h2>
        <p>Your phone has been ordered successfully with order id @OrderId</p>
    </div>
    <div class="col-8 offset-2">
        <img src="/images/confirmation.jpg" width="100%" style="border-radius:30px;" />
    </div>
</div>}
</div>

@code { private bool IsPaymentComplete { get; set; } = false;
    private int OrderId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var orderDetails = await localStorage.GetItemAsync<SmartPhoneOrderDetailDTO>(SD.Local_PhoneOrderDetails);
        var smartPhone = await smartphoneService.GetSmartPhoneDetails(orderDetails.SmartPhoneId);
        orderDetails.SmartPhoneDTO = smartPhone;
        OrderId = orderDetails.Id;

        var FinalSmartPhoneOrderDetails = await smartphoneOrderDetailService.MarkPaymentSuccessful(orderDetails);
        if (FinalSmartPhoneOrderDetails.Status == SD.Status_Ordered)
        {
            await localStorage.RemoveItemAsync(SD.Local_PhoneOrderDetails);
            await localStorage.RemoveItemAsync(SD.Local_InitialBooking);

            IsPaymentComplete = true;
        }
    }}
